{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/SpProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","components/isSp.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/UserManagement/Login.js","components/UserManagement/Register.js","components/Layout/Landing.js","securityUtils/SequreRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","deleteProject","id","window","confirm","delete","ProjectItem","onDeleteClick","props","this","className","style","color","textDecoration","to","projectIdentifier","projectName","description","onClick","bind","Component","connect","classes","makeStyles","root","minWidth","marginBottom","SpProjectItem","Card","CardContent","Typography","variant","component","CardActions","Button","size","CreateProjectButton","Fragment","Dashboard","state","sp","w","d","document","e","documentElement","g","getElementsByTagName","width","innerWidth","clientWidth","innerHeight","clientHeight","isSp","setState","getProjects","projects","map","key","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","AddProject","start_date","end_date","errors","onChange","onSubmit","nextProps","target","name","value","preventDefault","newProject","classnames","placeholder","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","initalState","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","projectLeader","match","params","getProject","updateProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityClass","priority","summary","acceptanceCriteria","dueDate","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","newTask","addProjectTask","UpdateProjectTask","create_At","getProjectTask","updateProjectTask","patch","Login","username","password","LoginRequest","login","setItem","decoded","jwt_decode","Register","confirmPassword","newUser","createNewUser","Landing","otherProps","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","SequreRoute","Boolean","hostname","ReactDOM","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4cbeb88f.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (project, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/project\", project);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjects = () => async dispatch => {\n  const res = await axios.get(\"/api/project/all\");\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data\n  });\n};\n\nexport const getProject = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteProject = id => async dispatch => {\n  if (window.confirm(\"本当に削除しますか？この動作は戻せません\")) {\n    await axios.delete(`/api/project/${id}`);\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id\n    });\n  }\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n// Types for Backlog Actions\n\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectActions\";\n\nclass ProjectItem extends Component {\n  onDeleteClick = id => {\n    this.props.deleteProject(id);\n  };\n\n  render() {\n    const { project } = this.props;\n    return (\n      <div className=\"container\">\n        <Link\n          style={{ color: \"inherit\", textDecoration: \"inherit\" }}\n          to={`/projectBoard/${project.projectIdentifier}`}\n        >\n          <div className=\"card card-body bg-light mb-3\">\n            <div className=\"row\">\n              <div className=\"col-2\">\n                <span className=\"mx-auto\">{project.projectIdentifier}</span>\n              </div>\n              <div className=\"col-lg-6 col-md-4 col-8\">\n                <h3>{project.projectName}</h3>\n                <p>{project.description}</p>\n              </div>\n              <div className=\"col-md-4 d-none d-lg-block\">\n                <ul className=\"list-group\">\n                  <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                    <li className=\"list-group-item board\">\n                      <i className=\"fa fa-flag-checkered pr-1\">\n                        {\" \"}\n                        Project Board\n                      </i>\n                    </li>\n                  </Link>\n                  <Link to={`/updateProject/${project.projectIdentifier}`}>\n                    <li className=\"list-group-item update\">\n                      <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                    </li>\n                  </Link>\n                  <li\n                    className=\"list-group-item delete\"\n                    onClick={this.onDeleteClick.bind(\n                      this,\n                      project.projectIdentifier\n                    )}\n                  >\n                    <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </Link>\n      </div>\n    );\n  }\n}\n\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired\n};\n\nexport default connect(null, { deleteProject })(ProjectItem);\n","import React, { Component } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectActions\";\n\nconst classes = makeStyles({\n  root: {\n    minWidth: 275,\n    marginBottom: 12\n  }\n});\n\nclass SpProjectItem extends Component {\n  onDeleteClick = id => {\n    this.props.deleteProject(id);\n  };\n\n  render() {\n    const { project } = this.props;\n    return (\n      <Card className={classes.root}>\n        <Link\n          style={{ color: \"inherit\", textDecoration: \"inherit\" }}\n          to={`/projectBoard/${project.projectIdentifier}`}\n        >\n          <CardContent>\n            <Typography\n              style={{ textDecoration: \"none\" }}\n              variant=\"h5\"\n              component=\"h2\"\n            >\n              {project.projectName}\n            </Typography>\n            <Typography\n              style={{ textDecoration: \"none\" }}\n              variant=\"body2\"\n              component=\"p\"\n            >\n              {project.description}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Button size=\"small\">\n              <Link to={`/updateProject/${project.projectIdentifier}`}>\n                更新する\n              </Link>\n            </Button>\n            <Button\n              size=\"small\"\n              color=\"secondary\"\n              onClick={this.onDeleteClick.bind(this, project.projectIdentifier)}\n            >\n              削除する\n            </Button>\n          </CardActions>\n        </Link>\n      </Card>\n    );\n  }\n}\n\nSpProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired\n};\n\nexport default connect(null, { deleteProject })(SpProjectItem);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateProjectButton = () => {\n  return (\n    <React.Fragment>\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-primary\">\n        親タスクを作成\n      </Link>\n    </React.Fragment>\n  );\n};\n\nexport default CreateProjectButton;\n","import React, { Component } from \"react\";\nimport ProjectItem from \"./Project/ProjectItem\";\nimport SpProjectItem from \"./Project/SpProjectItem\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { isSp } from \"./isSp\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sp: false\n    };\n  }\n  componentWillMount() {\n    const sp = isSp();\n    this.setState({ sp });\n  }\n\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    const { projects } = this.props.project;\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">親タスク一覧</h1>\n              <br />\n              <CreateProjectButton />\n              <br />\n              <hr />\n              {projects.map(project =>\n                this.state.sp ? (\n                  <SpProjectItem key={project.id} project={project} />\n                ) : (\n                  <ProjectItem key={project.id} project={project} />\n                )\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project\n});\n\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\n","export const isSp = () => {\n  const w = window,\n    d = document,\n    e = d.documentElement,\n    g = d.getElementsByTagName(\"body\")[0],\n    width = w.innerWidth || e.clientWidth || g.clientWidth,\n    height = w.innerHeight || e.clientHeight || g.clientHeight;\n\n  if (width < 768) {\n    return true;\n  } else {\n    return false;\n  }\n};\n","import axios from \"axios\";\n\nconst setJWTToken = token => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJWTToken;\n","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/users/register\", newUser);\n    history.push(\"/login\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const login = LoginRequest => async dispatch => {\n  try {\n    // post => Login Request\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\n    // extract token from res.data\n    const { token } = res.data;\n    // store the token in the localStorage\n    localStorage.setItem(\"jwtToken\", token);\n    // set our token in header ***\n    setJWTToken(token);\n    // decode token on React\n    const decoded = jwt_decode(token);\n    // dispatch to our securityReducer\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {}\n  });\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityActions\";\n\nclass Header extends Component {\n  logout() {\n    this.props.logout();\n    window.location.href = \"/\";\n  }\n  render() {\n    const { validToken, user } = this.props.security;\n\n    const userIsAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              <i className=\"fas fa-user-circle mr-1\" />\n              {user.fullName}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              to=\"/logout\"\n              onClick={this.logout.bind(this)}\n            >\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userIsNotAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/register\">\n              新規登録\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/login\">\n              ログイン\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks;\n\n    if (validToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsNotAuthenticated;\n    }\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            タスマネ\n          </Link>\n          {headerLinks}\n        </div>\n      </nav>\n    );\n  }\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps, { logout })(Header);\n","import React, { Component } from \"react\";\nimport PropType from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n    this.props.createProject(newProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div>\n        <div className=\"project\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <h2 className=\"display4 text-center\">親タスクを作成しよう</h2>\n                <p className=\"lead text-center\">\n                  例：「ブログを作成する」「雑務」\n                </p>\n                <hr />\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectName\n                      })}\n                      placeholder=\"親タスク名\"\n                      name=\"projectName\"\n                      value={this.state.projectName}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectName && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectName}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectIdentifier\n                      })}\n                      placeholder=\"タスクID ※5文字\"\n                      name=\"projectIdentifier\"\n                      value={this.state.projectIdentifier}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectIdentifier && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectIdentifier}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.description\n                      })}\n                      placeholder=\"親タスクの説明\"\n                      name=\"description\"\n                      value={this.state.description}\n                      onChange={this.onChange}\n                    />\n                    {errors.description && (\n                      <div className=\"invalid-feedback\">\n                        {errors.description}\n                      </div>\n                    )}\n                  </div>\n                  <h6>タスクの期間</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"start_date\"\n                      value={this.state.start_date}\n                      onChange={this.onChange}\n                    />\n                    <p>{errors.start_date}</p>\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"end_date\"\n                      value={this.state.end_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mt-4\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProject.propTypes = {\n  createProject: PropType.func.isRequired,\n  errors: PropType.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { createProject })(AddProject);\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload\n      };\n\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload\n      };\n\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          project => project.projectIdentifier !== action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"../actions/types\";\n\nconst initialState = {\n  project_tasks: [],\n  project_task: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        project_tasks: action.payload\n      };\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        project_task: action.payload\n      };\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        project_tasks: state.project_tasks.filter(\n          project_task => project_task.projectSequence !== action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n  validToken: false,\n  user: {}\n};\n\nconst booleanActionPayload = payload => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: booleanActionPayload(action.payload),\n        user: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer,\n  security: securityReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initalState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(applyMiddleware(...middleware), ReactReduxDevTools)\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      projectLeader: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      projectLeader,\n      description,\n      start_date,\n      end_date\n    } = nextProps.project;\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      projectLeader,\n      description,\n      start_date,\n      end_date\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const updateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      projectLeader: this.state.projectLeader,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n\n    this.props.createProject(updateProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg,\", {\n                      \"is-invalid\": errors.projectName\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    disabled\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    value={this.state.description}\n                    onChange={this.onChange}\n                  />\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project.project,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { getProject, createProject })(\n  UpdateProject\n);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Bookmark from \"@material-ui/icons/Bookmark\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass ProjectTask extends Component {\n  onDeleteClick(backlog_id, pt_id) {\n    this.props.deleteProjectTask(backlog_id, pt_id);\n  }\n\n  render() {\n    const { project_task } = this.props;\n    let priorityClass;\n\n    if (project_task.priority === 1) {\n      priorityClass = \"text-danger\";\n    }\n\n    if (project_task.priority === 2) {\n      priorityClass = \"text-warning\";\n    }\n\n    if (project_task.priority === 3) {\n      priorityClass = \"text-primary\";\n    }\n\n    return (\n      <Card style={{ marginBottom: \"1px\" }}>\n        <Link\n          to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\n          style={{ color: \"inherit\", textDecoration: \"inherit\" }}\n        >\n          <CardContent>\n            <Typography className=\"card-title\" component=\"h5\" variant=\"h5\">\n              <Bookmark className={`${priorityClass}`} />\n              {project_task.summary}\n            </Typography>\n            <Typography\n              className=\"card-text text-truncate\"\n              component=\"p\"\n              variant=\"p\"\n            >\n              {project_task.acceptanceCriteria}\n            </Typography>\n            <Typography\n              className=\"card-text text-truncate\"\n              component=\"p\"\n              variant=\"p\"\n            >\n              〆{project_task.dueDate}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Link\n              to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\n              style={{ color: \"inherit\", textDecoration: \"inherit\" }}\n            >\n              <Button style={{ color: \"#007bff\" }}>View / Update</Button>\n            </Link>\n            <Button\n              style={{ color: \"#f50057\" }}\n              onClick={this.onDeleteClick.bind(\n                this,\n                project_task.projectIdentifier,\n                project_task.projectSequence\n              )}\n            >\n              Delete\n            </Button>\n          </CardActions>\n        </Link>\n      </Card>\n    );\n  }\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired\n};\n\nexport default connect(null, { deleteProjectTask })(ProjectTask);\n","import axios from \"axios\";\nimport {\n  GET_BACKLOG,\n  GET_ERRORS,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"./types\";\n\n//Fix bug with priority in Spring Boot Server, needs to check null first\nexport const addProjectTask = (\n  backlog_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getBacklog = backlog_id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjectTask = (\n  backlog_id,\n  pt_id,\n  history\n) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data\n    });\n  } catch (err) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const updateProjectTask = (\n  backlog_id,\n  pt_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\n  if (\n    window.confirm(\n      `You are deleting project task ${pt_id}, this action cannot be undone`\n    )\n  ) {\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: pt_id\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\n\nexport default class Backlog extends Component {\n  render() {\n    const { project_tasks_prop } = this.props;\n    const tasks = project_tasks_prop.map(project_task => (\n      <ProjectTask key={project_task.id} project_task={project_task} />\n    ));\n\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\n        todoItems.push(tasks[i]);\n      }\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n        inProgressItems.push(tasks[i]);\n      }\n      if (tasks[i].props.project_task.status === \"DONE\") {\n        doneItems.push(tasks[i]);\n      }\n    }\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>未着手</h3>\n              </div>\n            </div>\n            {todoItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>進行中</h3>\n              </div>\n            </div>\n            {inProgressItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>完了</h3>\n              </div>\n            </div>\n            {doneItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogActions\";\n\nclass ProjectBoard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { project_tasks } = this.props.backlog;\n    const { errors } = this.state;\n\n    let BoardContent;\n\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        if (errors.projectNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        } else if (errors.projectIdentifier) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectIdentifier}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              No Project Tasks on this board\n            </div>\n          );\n        }\n      } else {\n        return <Backlog project_tasks_prop={project_tasks} />;\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, project_tasks);\n\n    return (\n      <div className=\"container\">\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n          <i className=\"fas fa-plus-circle\"> 子タスクを作成</i>\n        </Link>\n        <br />\n        <hr />\n        {BoardContent}\n      </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  backlog: state.backlog,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { addProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n    const { id } = this.props.match.params;\n\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: id,\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  // on change\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  //on submit\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate\n    };\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { errors } = this.state;\n\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                子タスク一覧に戻る\n              </Link>\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\n              <p className=\"lead text-center\">子タスクを作成しよう！</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"子タスクのタイトル\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"子タスクの説明\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>期限</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>優先度</option>\n                    <option value={1}>高</option>\n                    <option value={2}>中</option>\n                    <option value={3}>低</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">ステータス</option>\n                    <option value=\"TO_DO\">未着手</option>\n                    <option value=\"IN_PROGRESS\">進行中</option>\n                    <option value=\"DONE\">完了</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getProjectTask,\n  updateProjectTask\n} from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: \"\",\n      projectIdentifier: \"\",\n      create_At: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { backlog_id, pt_id } = this.props.match.params;\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At\n    } = nextProps.project_task;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At\n    });\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const UpdateProjectTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      create_At: this.state.create_At\n    };\n\n    // console.log(UpdateProjectTask);\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      UpdateProjectTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/projectBoard/${this.state.projectIdentifier}`}\n                className=\"btn btn-light\"\n              >\n                子タスク一覧に戻る\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\n              <p className=\"lead text-center\">子タスクを更新しよう！</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"子タスクのタイトル\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"子タスクの説明\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>期限</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>優先度</option>\n                    <option value={1}>高</option>\n                    <option value={2}>中</option>\n                    <option value={3}>低</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">ステータス</option>\n                    <option value=\"TO_DO\">未着手</option>\n                    <option value=\"IN_PROGRESS\">進行中</option>\n                    <option value=\"DONE\">完了</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  project_task: PropTypes.object.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project_task: state.backlog.project_task,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\n  UpdateProjectTask\n);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { login } from \"../../actions/securityActions\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const LoginRequest = {\n      username: this.state.username,\n      password: this.state.password\n    };\n\n    this.props.login(LoginRequest);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <p className=\"lead text-center\">いらっしゃいませ</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"メールアドレス\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"パスワード\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { createNewUser } from \"../../actions/securityActions\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      fullName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword\n    };\n    this.props.createNewUser(newUser, this.props.history);\n  }\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign In</h1>\n              <p className=\"lead text-center\">アカウントを登録してみよう！</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.fullName\n                    })}\n                    placeholder=\"ユーザーネーム\"\n                    name=\"fullName\"\n                    value={this.state.fullName}\n                    onChange={this.onChange}\n                  />\n                  {errors.fullName && (\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"メールアドレス\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"パスワード\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.confirmPassword\n                    })}\n                    placeholder=\"パスワード確認\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                  {errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  security: state.security\n});\nexport default connect(mapStateToProps, { createNewUser })(Register);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3\">タスマネver1</h1>\n                <p className=\"lead\">タスク管理して \"やり忘れ\" をなくそう！</p>\n                <hr />\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\n                  新規登録\n                </Link>\n                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\n                  ログイン\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nLanding.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={props =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Login from \"./components/UserManagement/Login\";\nimport Register from \"./components/UserManagement/Register\";\nimport Landing from \"./components/Layout/Landing\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SequreRoute from \"./securityUtils/SequreRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n            <Switch>\n              <SequreRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SequreRoute exact path=\"/addProject\" component={AddProject} />\n              <SequreRoute\n                exact\n                path=\"/updateProject/:id\"\n                component={UpdateProject}\n              />\n              <SequreRoute\n                exact\n                path=\"/projectBoard/:id\"\n                component={ProjectBoard}\n              />\n              <SequreRoute\n                exact\n                path=\"/addProjectTask/:id\"\n                component={AddProjectTask}\n              />\n              <SequreRoute\n                exact\n                path=\"/updateProjectTask/:backlog_id/:pt_id\"\n                component={UpdateProjectTask}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}